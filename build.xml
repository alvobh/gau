<?xml version="1.0" encoding="UTF-8"?>
<project name="gau" basedir="." default="build">

    <!-- Hook into One-Jar project -->
    <available property="one-jar.dir" file="../one-jar/build.onejar.xml" value="../one-jar"/>
    <!-- Will be ignored if available above -->
	<property name="one-jar.dir" location="one-jar" />
    <import file="${one-jar.dir}/build.onejar.xml"/>
    
	<property name="eclipse.jar-in-jar.dir" value="build-lib/eclipse"/>
	<property name="temp.dir" value="temp" />	
    <path id="libraries">
    	<fileset dir="lib" includes="*.jar"/>
    </path>
    
    <target name="mkdirs">
        <!-- <mkdir dir="${test.results.dir}" /> -->
        <!--  <mkdir dir="${test.reports.dir}"/> -->
        <mkdir dir="classes"/>
    	  <!-- <mkdir dir="classes/test"/> -->
        <!-- <mkdir dir="classes/junit"/> -->
    	<mkdir dir="build"/>
    </target>

	<target name="build" depends="clean, mkdirs, compile, build.gau" />

	<target name="clean">
		<delete dir="classes" />
	</target>
	
	<target name="distclean" depends="clean" description="clean distribution">
	    <delete dir="build"/>
		<delete dir="test-reports"/>
	    <delete dir="test-results"/>
	</target>

	<target name="compile" depends="mkdirs">
        <javac destdir="classes" includes="**/*.java" debug="true">
            <src path="src" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
            <classpath path="${one-jar.ant.jar}"/>
        </javac>
        <!--
        <javac destdir="classes/test" includes="**/*.java" debug="true">
            <src path="test" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
            <classpath path="${one-jar.ant.jar}"/>
        </javac>
        <javac destdir="classes/junit" includes="**/*.java" debug="true">
            <src path="junit" />
            <classpath refid="libraries" />
            <classpath refid="one-jar.libraries"/>
        	   <classpath path="classes/test"/> 
        </javac>
        -->
	</target>

    <!-- Build the One-Jar -->
	<target name="build.gau">
		<mkdir dir="build"/>
		<one-jar destfile="build/gau.jar">
            <manifest>
                <attribute name="Main-Class" value="gau.Boot"/>
                <attribute name="One-Jar-Main-Class" value="gau.Main"/>
            </manifest>
            <main>
                <fileset dir="classes"/>
            </main>
            <lib>
                <fileset dir="lib" includes="*.jar" />
            </lib>
		</one-jar>
		<one-jar destfile="build/test-gau.jar">
            <manifest>
                <attribute name="Main-Class" value="gau.Boot"/>
            	<attribute name="One-Jar-Main-Class" value="gau.tests.TestMain"/>
            </manifest>
			<main>
				<fileset dir="classes"/>
			</main>
			<lib>
				<fileset dir="lib" includes="*.jar" />
			</lib>
		</one-jar>
		<delete dir="${temp.dir}" />
	</target>

    <property name="formatter" value="xml" />

    <!-- Test the distribution -->
    <!--
    <target name="junit.report.gau" depends="build" description="JUnit test of gau">
        <antcall target="junit.gau" />
        <antcall target="junit.report"/>   
    </target>
   
    <target name="junit.gau" depends="build">
        <echo>********** junit-gau.jar</echo>
        <junit fork="yes" showoutput="no" printsummary="yes">
            <jvmarg value="-Done-jar.verbose=true" />
            <jvmarg value="-Done-jar.jarname=${basedir}/build/test-gau.jar" />
            <classpath>
                <fileset file="${basedir}/build/test-gau.jar" />
                <path refid="one-jar.libraries"/>
            	<path location="classes/junit" />
            </classpath>

            <test name="gau.test.GauSuite" todir="${test.results.dir}" outfile="GauSuite" />
            <formatter type="${formatter}" usefile="yes" />
        </junit>
    </target>
   -->

    <target name="run.gau" depends="build" description="Run a One-Jar gau">
        <java fork="true" jar="build/gau.jar"/>
    </target>
   <!--
	<target name="test.gau" depends="build" description="Stand-alone test a One-Jar gau">
        <java fork="true" jar="build/test-gau.jar"/>
    </target>
	-->
</project>
